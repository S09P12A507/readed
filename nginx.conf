# nginx가 리버시 프록시 역할을 하도록 nginx 파일 설정
user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # upstream 설정은 docker-compose에서 설정한 서비스명 사용
    # docker-compose.yml에서 올라가는 컨테이너명으로 작성
    # 백엔드 upstream 설정
    upstream server  {
        # http:// 붙이면 안 됨
        server 3.38.252.22:8081;
        # 접속시 커넥션 유지 시간을 지정
        keepalive 1024;
    }

    # 프론트엔드 upstream 설정
    upstream client {
        server 3.38.252.22:3000;
    }

    server {
        # nginx를 통해 외부로 노출되는 port.
        listen 80;

        # /api 경로로 오는 요청을 백엔드 upstream 의 /api 경로로 포워딩
        location /api/ {
            proxy_pass         http://3.38.252.22:8081;
        }
        # / 경로로 오는 요청을 프론트엔드 upstream 의 / 경로로 포워딩
        location / {
            proxy_pass         http://3.38.252.22:3000;
            # 시간 넉넉하게
            proxy_connect_timeout 300s;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
            proxy_buffers 8 16k;
            proxy_buffer_size 32k;
        }

        # favicon 로딩하지 않게 처리
        location = /favicon.ico {
            return 204;
            access_log     off;
            log_not_found  off;
        }
    }
    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;
}